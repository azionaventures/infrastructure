version: "1"

env:
  VPC_CIDR_BLOCK: ${VPC_CIDR_BLOCK}
  DEVOPS_TERRAFORM_TEMPLATE_PATH: ${AZIONA_PREFIX}/devops/terraform

options:
  interpolation: true
  session_clean_before: False
  session_clean_after: False

targets:
  vpc-create:
    stages:
      init:
        module: devops.packages2.terraform.terraform
        args:
          --module-name: vpc
          --action: init
          --action-args: |
            -backend-config="bucket=${ORGANIZATION_NAME}-terraform"
            -backend-config="key=devops-terraform-vpc-${ENVIRONMENT}/terraform.tfstate"
            -backend-config="region=${AWS_BUCKET_REGION}"
            -backend-config="profile=${ORGANIZATION_NAME}"
            -backend-config="dynamodb_table=terraform-lock"
            -reconfigure
            -upgrade
      apply:
        module: devops.packages2.terraform.terraform
        args:
          --module-name: vpc
          --action: apply
          --action-args: |
            -auto-approve
            -var="enabled=1"
            -var="environment=${ENVIRONMENT}"
            -var="vpc_cidr_block=${VPC_CIDR_BLOCK}"
            -var="aws_region=${EKS_AWS_REGION}"
            -var="eks_cluster=${EKS_CLUSTER_NAME}"
            -var="shared_credentials_file=${SHARED_CREDENTIALS_FILE}"
            -var="profile=${ORGANIZATION_NAME}"
  vpc-destroy:
    stages:
      init:
        module: devops.packages2.terraform.terraform
        args:
          --module-name: vpc
          --action: init
          --action-args: |
            -backend-config="bucket=${ORGANIZATION_NAME}-terraform"
            -backend-config="key=devops-terraform-vpc-${ENVIRONMENT}/terraform.tfstate"
            -backend-config="region=${AWS_BUCKET_REGION}"
            -backend-config="profile=${ORGANIZATION_NAME}"
            -backend-config="dynamodb_table=terraform-lock"
            -reconfigure
            -upgrade
      apply:
        module: devops.packages2.terraform.terraform
        args:
          --module-name: vpc
          --action: destroy
          --action-args: |
            -auto-approve
            -var="enabled=1"
            -var="environment=${ENVIRONMENT}"
            -var="vpc_cidr_block=${VPC_CIDR_BLOCK}"
            -var="aws_region=${EKS_AWS_REGION}"
            -var="eks_cluster=${EKS_CLUSTER_NAME}"
            -var="shared_credentials_file=${SHARED_CREDENTIALS_FILE}"
            -var="profile=${ORGANIZATION_NAME}"

